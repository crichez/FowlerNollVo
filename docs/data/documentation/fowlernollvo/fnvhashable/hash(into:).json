{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Hasher"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":" "},{"kind":"internalParam","text":"hasher"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":") "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHasher","preciseIdentifier":"s:12FowlerNollVo9FNVHasherP","text":"FNVHasher"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can implement this method in two ways, or a combination of both:"}]},{"type":"orderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By calling "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable\/hash(into:)"},{"type":"text","text":"  on other "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable"},{"type":"text","text":" values."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By providing a sequence of bytes to the "},{"type":"codeVoice","code":"FNVHasher.combine(_:)"},{"type":"text","text":" method."}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example conforms a custom type by individually hashing each stored property:"}]},{"type":"codeListing","syntax":"swift","code":["struct CustomType {","    let id: Int","    var name: String","    var value: Double","}","","extension CustomType: FNVHashable {","    func hash<Hasher>(into hasher: inout Hasher) where Hasher : FNVHasher {","        hasher.combine(id)","        hasher.combine(name)","        hasher.combine(value)","    }","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The following example conforms "},{"type":"codeVoice","code":"Foundation.UUID"},{"type":"text","text":". Since "},{"type":"codeVoice","code":"UUID"},{"type":"text","text":" is a trivial type,"},{"type":"text","text":" "},{"type":"text","text":"the individual bytes of the value are fed to the hasher instead of the value itself."}]},{"type":"codeListing","syntax":"swift","code":["import Foundation","","extension UUID: FNVHashable {","    func hash<Hasher>(into hasher: inout Hasher) where Hasher : FNVHasher {","        withUnsafeBytes(of: self) { idBytes in","            hasher.combine(idBytes)","        }","    }","}"]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/fowlernollvo\/fnvhashable\/hash(into:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable\/hash(into:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The instructions on the content and sequence of data to feed to the hasher."}],"kind":"symbol","metadata":{"role":"symbol","title":"hash(into:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Hasher"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"symbolKind":"method","externalID":"s:12FowlerNollVo11FNVHashableP4hash4intoyqd__z_tAA9FNVHasherRd__lF","required":true,"modules":[{"name":"FowlerNollVo"}]},"hierarchy":{"paths":[["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable"]]},"references":{"doc://FowlerNollVo/documentation/FowlerNollVo/FNVHashable/hash(into:)":{"role":"symbol","title":"hash(into:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"hash"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Hasher"},{"kind":"text","text":">("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Hasher"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The instructions on the content and sequence of data to feed to the hasher."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable\/hash(into:)","kind":"symbol","required":true,"type":"topic","url":"\/documentation\/fowlernollvo\/fnvhashable\/hash(into:)"},"doc://FowlerNollVo/documentation/FowlerNollVo":{"role":"collection","title":"FowlerNollVo","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo"},"doc://FowlerNollVo/documentation/FowlerNollVo/FNVHasher":{"role":"symbol","title":"FNVHasher","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FNVHasher"}],"abstract":[{"type":"text","text":"A value that uses a Fowler-Noll-Vo hash function on ingested data to produce a digest."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHasher","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FNVHasher"}],"url":"\/documentation\/fowlernollvo\/fnvhasher"},"doc://FowlerNollVo/documentation/FowlerNollVo/FNVHashable":{"role":"symbol","title":"FNVHashable","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"FNVHashable"}],"abstract":[{"type":"text","text":"A protocol that provides bytes for use with a Fowler-Noll-Vo "},{"type":"reference","isActive":true,"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHasher"},{"type":"text","text":"."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/FNVHashable","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FNVHashable"}],"url":"\/documentation\/fowlernollvo\/fnvhashable"}}}