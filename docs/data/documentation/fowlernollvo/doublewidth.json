{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleWidth"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"Base"},{"kind":"text","text":"> "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"FixedWidthInteger","preciseIdentifier":"s:s17FixedWidthIntegerP"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"You can use the "},{"type":"codeVoice","code":"DoubleWidth"},{"type":"text","text":" type to continue calculations with the result"},{"type":"text","text":" "},{"type":"text","text":"of a full width arithmetic operation. Normally, when you perform a full"},{"type":"text","text":" "},{"type":"text","text":"width operation, the result is a tuple of the high and low parts of the"},{"type":"text","text":" "},{"type":"text","text":"result."}]},{"type":"codeListing","syntax":null,"code":["let a = 2241543570477705381","let b = 186319822866995413","let c = a.multipliedFullWidth(by: b)","\/\/ c == (high: 22640526660490081, low: 7959093232766896457)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The tuple "},{"type":"codeVoice","code":"c"},{"type":"text","text":" can’t be used in any further comparisons or calculations. To"},{"type":"text","text":" "},{"type":"text","text":"use this value, create a "},{"type":"codeVoice","code":"DoubleWidth"},{"type":"text","text":" instance from the result. You can"},{"type":"text","text":" "},{"type":"text","text":"use the "},{"type":"codeVoice","code":"DoubleWidth"},{"type":"text","text":" instance in the same way that you would use any other"},{"type":"text","text":" "},{"type":"text","text":"integer type."}]},{"type":"codeListing","syntax":null,"code":["let d = DoubleWidth(a.multipliedFullWidth(by: b))","\/\/ d == 417644001000058515200174966092417353","","\/\/ Check the calculation:","print(d \/ DoubleWidth(a) == b)","\/\/ Prints \"true\"","","if d > Int.max {","    print(\"Too big to be an 'Int'!\")","} else {","    print(\"Small enough to fit in an 'Int'\")","}","\/\/ Prints \"Too big to be an 'Int'!\""]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"codeVoice","code":"DoubleWidth"},{"type":"text","text":" type is not intended as a replacement for a variable-width"},{"type":"text","text":" "},{"type":"text","text":"integer type. Nesting "},{"type":"codeVoice","code":"DoubleWidth"},{"type":"text","text":" instances, in particular, may result in"},{"type":"text","text":" "},{"type":"text","text":"undesirable performance."}]}]}],"schemaVersion":{"major":0,"minor":2,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/fowlernollvo\/doublewidth"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/FowlerNollVo\/s18AdditiveArithmeticP","doc:\/\/FowlerNollVo\/Sz","doc:\/\/FowlerNollVo\/SL","doc:\/\/FowlerNollVo\/s28CustomDebugStringConvertibleP","doc:\/\/FowlerNollVo\/s23CustomStringConvertibleP","doc:\/\/FowlerNollVo\/SQ","doc:\/\/FowlerNollVo\/s27ExpressibleByIntegerLiteralP","doc:\/\/FowlerNollVo\/s17FixedWidthIntegerP","doc:\/\/FowlerNollVo\/SH","doc:\/\/FowlerNollVo\/s25LosslessStringConvertibleP","doc:\/\/FowlerNollVo\/Sj","doc:\/\/FowlerNollVo\/SZ","doc:\/\/FowlerNollVo\/s13SignedNumericP","doc:\/\/FowlerNollVo\/Sx","doc:\/\/FowlerNollVo\/SU"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A fixed-width integer that has twice the bit width of its base type."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleWidth"}],"title":"DoubleWidth","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:12FowlerNollVo11DoubleWidthV","modules":[{"name":"FowlerNollVo"}],"navigatorTitle":[{"kind":"identifier","text":"DoubleWidth"}]},"hierarchy":{"paths":[["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo"]]},"topicSections":[{"title":"Operators","identifiers":["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/__=(_:_:)-1whyo","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/__=(_:_:)-62xvw"]},{"title":"Initializers","identifiers":["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/init()-aiuw","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/init(_:)-8gp2a"]},{"title":"Instance Properties","identifiers":["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/high-swift.property","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/low-swift.property"]},{"title":"Type Aliases","identifiers":["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/High-swift.typealias","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Low-swift.typealias"]},{"title":"Default Implementations","identifiers":["doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/AdditiveArithmetic-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/BinaryInteger-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Comparable-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/CustomDebugStringConvertible-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/CustomStringConvertible-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Equatable-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/ExpressibleByIntegerLiteral-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/FixedWidthInteger-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Hashable-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Numeric-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/SignedInteger-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/SignedNumeric-Implementations","doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/UnsignedInteger-Implementations"],"generated":true}],"references":{"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/ExpressibleByIntegerLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByIntegerLiteral Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/ExpressibleByIntegerLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/expressiblebyintegerliteral-implementations"},"doc://FowlerNollVo/SU":{"type":"unresolvable","title":"Swift.UnsignedInteger","identifier":"doc:\/\/FowlerNollVo\/SU"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/low-swift.property":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"low","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"low"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Low"}],"abstract":[{"type":"text","text":"The “low word” of the value."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/low-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/low-swift.property"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/Comparable-Implementations":{"role":"collectionGroup","title":"Comparable Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Comparable-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/comparable-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/high-swift.property":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"high","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"high"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"High"}],"abstract":[{"type":"text","text":"The “high word” of this value."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/high-swift.property","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/high-swift.property"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/init(_:)-8gp2a":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"((high"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"High"},{"kind":"text","text":", low"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">."},{"kind":"typeIdentifier","text":"Low"},{"kind":"text","text":"))"}],"abstract":[{"type":"text","text":"Creates a new instance from the given tuple of high and low parts."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/init(_:)-8gp2a","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/init(_:)-8gp2a"},"doc://FowlerNollVo/documentation/FowlerNollVo":{"role":"collection","title":"FowlerNollVo","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/init()-aiuw":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"init()","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Zero."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/init()-aiuw","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/init()-aiuw"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth":{"role":"symbol","title":"DoubleWidth","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"DoubleWidth"}],"abstract":[{"type":"text","text":"A fixed-width integer that has twice the bit width of its base type."}],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DoubleWidth"}],"url":"\/documentation\/fowlernollvo\/doublewidth"},"doc://FowlerNollVo/s18AdditiveArithmeticP":{"type":"unresolvable","title":"Swift.AdditiveArithmetic","identifier":"doc:\/\/FowlerNollVo\/s18AdditiveArithmeticP"},"doc://FowlerNollVo/s28CustomDebugStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomDebugStringConvertible","identifier":"doc:\/\/FowlerNollVo\/s28CustomDebugStringConvertibleP"},"doc://FowlerNollVo/Sj":{"type":"unresolvable","title":"Swift.Numeric","identifier":"doc:\/\/FowlerNollVo\/Sj"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/SignedInteger-Implementations":{"role":"collectionGroup","title":"SignedInteger Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/SignedInteger-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/signedinteger-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/CustomDebugStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomDebugStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/CustomDebugStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/customdebugstringconvertible-implementations"},"doc://FowlerNollVo/s17FixedWidthIntegerP":{"type":"unresolvable","title":"Swift.FixedWidthInteger","identifier":"doc:\/\/FowlerNollVo\/s17FixedWidthIntegerP"},"doc://FowlerNollVo/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/FowlerNollVo\/SQ"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/UnsignedInteger-Implementations":{"role":"collectionGroup","title":"UnsignedInteger Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/UnsignedInteger-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/unsignedinteger-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/equatable-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/High-swift.typealias":{"role":"symbol","title":"DoubleWidth.High","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"High"}],"abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/High-swift.typealias","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"High"}],"url":"\/documentation\/fowlernollvo\/doublewidth\/high-swift.typealias"},"doc://FowlerNollVo/SZ":{"type":"unresolvable","title":"Swift.SignedInteger","identifier":"doc:\/\/FowlerNollVo\/SZ"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/BinaryInteger-Implementations":{"role":"collectionGroup","title":"BinaryInteger Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/BinaryInteger-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/binaryinteger-implementations"},"doc://FowlerNollVo/s23CustomStringConvertibleP":{"type":"unresolvable","title":"Swift.CustomStringConvertible","identifier":"doc:\/\/FowlerNollVo\/s23CustomStringConvertibleP"},"doc://FowlerNollVo/s25LosslessStringConvertibleP":{"type":"unresolvable","title":"Swift.LosslessStringConvertible","identifier":"doc:\/\/FowlerNollVo\/s25LosslessStringConvertibleP"},"doc://FowlerNollVo/Sx":{"type":"unresolvable","title":"Swift.Strideable","identifier":"doc:\/\/FowlerNollVo\/Sx"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/CustomStringConvertible-Implementations":{"role":"collectionGroup","title":"CustomStringConvertible Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/CustomStringConvertible-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/customstringconvertible-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/-Implementations":{"role":"collectionGroup","title":" Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/__=(_:_:)-1whyo":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":"<<=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"<<="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/__=(_:_:)-1whyo","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/__=(_:_:)-1whyo"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/Hashable-Implementations":{"role":"collectionGroup","title":"Hashable Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Hashable-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/hashable-implementations"},"doc://FowlerNollVo/Sz":{"type":"unresolvable","title":"Swift.BinaryInteger","identifier":"doc:\/\/FowlerNollVo\/Sz"},"doc://FowlerNollVo/SL":{"type":"unresolvable","title":"Swift.Comparable","identifier":"doc:\/\/FowlerNollVo\/SL"},"doc://FowlerNollVo/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/FowlerNollVo\/SH"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/Numeric-Implementations":{"role":"collectionGroup","title":"Numeric Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Numeric-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/numeric-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/FixedWidthInteger-Implementations":{"role":"collectionGroup","title":"FixedWidthInteger Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/FixedWidthInteger-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/fixedwidthinteger-implementations"},"doc://FowlerNollVo/s13SignedNumericP":{"type":"unresolvable","title":"Swift.SignedNumeric","identifier":"doc:\/\/FowlerNollVo\/s13SignedNumericP"},"doc://FowlerNollVo/s27ExpressibleByIntegerLiteralP":{"type":"unresolvable","title":"Swift.ExpressibleByIntegerLiteral","identifier":"doc:\/\/FowlerNollVo\/s27ExpressibleByIntegerLiteralP"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/SignedNumeric-Implementations":{"role":"collectionGroup","title":"SignedNumeric Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/SignedNumeric-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/signednumeric-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/__=(_:_:)-62xvw":{"conformance":{"constraints":[{"type":"codeVoice","code":"Base"},{"type":"text","text":" conforms to "},{"type":"codeVoice","code":"FixedWidthInteger"},{"type":"text","text":"."}],"availabilityPrefix":[{"type":"text","text":"Available when"}],"conformancePrefix":[{"type":"text","text":"Conforms when"}]},"role":"symbol","title":">>=(_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":">>="},{"kind":"text","text":" "},{"kind":"text","text":"("},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">, "},{"kind":"typeIdentifier","text":"DoubleWidth","preciseIdentifier":"s:12FowlerNollVo11DoubleWidthV"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Base"},{"kind":"text","text":">)"}],"abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/__=(_:_:)-62xvw","kind":"symbol","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/__=(_:_:)-62xvw"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/AdditiveArithmetic-Implementations":{"role":"collectionGroup","title":"AdditiveArithmetic Implementations","abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/AdditiveArithmetic-Implementations","kind":"article","type":"topic","url":"\/documentation\/fowlernollvo\/doublewidth\/additivearithmetic-implementations"},"doc://FowlerNollVo/documentation/FowlerNollVo/DoubleWidth/Low-swift.typealias":{"role":"symbol","title":"DoubleWidth.Low","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"Low"}],"abstract":[],"identifier":"doc:\/\/FowlerNollVo\/documentation\/FowlerNollVo\/DoubleWidth\/Low-swift.typealias","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Low"}],"url":"\/documentation\/fowlernollvo\/doublewidth\/low-swift.typealias"}}}